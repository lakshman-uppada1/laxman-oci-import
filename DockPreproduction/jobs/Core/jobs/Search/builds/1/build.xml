<?xml version='1.1' encoding='UTF-8'?>
<flow-build plugin="workflow-job@1145.v7f2433caa07f">
  <actions>
    <hudson.model.CauseAction>
      <causeBag class="linked-hash-map">
        <entry>
          <hudson.model.Cause_-UpstreamCause>
            <upstreamProject>Build/DockCore/Search</upstreamProject>
            <upstreamUrl>job/Build/job/DockCore/job/Search/</upstreamUrl>
            <upstreamBuild>1</upstreamBuild>
            <upstreamCauses>
              <hudson.triggers.SCMTrigger_-SCMTriggerCause/>
            </upstreamCauses>
          </hudson.model.Cause_-UpstreamCause>
          <int>1</int>
        </entry>
      </causeBag>
    </hudson.model.CauseAction>
    <hudson.model.ParametersAction>
      <safeParameters class="sorted-set"/>
      <parameters>
        <hudson.model.StringParameterValue>
          <name>absolute_job_path</name>
          <description>&lt;font color=dimgray size=2&gt;&lt;b&gt;Do not change this value! The metadata.json will be copied from this job.&lt;/b&gt;&lt;/font&gt;</description>
          <value>Build/DockCore/Search</value>
        </hudson.model.StringParameterValue>
        <hudson.model.StringParameterValue>
          <name>image_tag</name>
          <description>&lt;font color=darkgreen size=2&gt;&lt;b&gt;OPTIONAL: Specify the tag to upload a specific image version to the container registry.&lt;/b&gt;&lt;/font&gt;</description>
          <value></value>
        </hudson.model.StringParameterValue>
        <hudson.model.StringParameterValue>
          <name>artifact_source</name>
          <description>&lt;font color=dimgray size=2&gt;&lt;b&gt;
ArtifactRepo - Push the docker image to container registry.
&lt;/b&gt;&lt;/font&gt;</description>
          <value>ArtifactRepo</value>
        </hudson.model.StringParameterValue>
      </parameters>
      <parameterDefinitionNames>
        <string>absolute_job_path</string>
        <string>image_tag</string>
        <string>artifact_source</string>
      </parameterDefinitionNames>
    </hudson.model.ParametersAction>
    <hudson.plugins.git.util.BuildData plugin="git@4.11.5">
      <buildsByBranchName>
        <entry>
          <string>origin/release-5.1.0</string>
          <hudson.plugins.git.util.Build>
            <marked plugin="git-client@3.11.2">
              <sha1>54cf71cc071309568ac3aefcff0863f761c1c18d</sha1>
              <branches class="list">
                <hudson.plugins.git.Branch>
                  <sha1 reference="../../../sha1"/>
                  <name>origin/release-5.1.0</name>
                </hudson.plugins.git.Branch>
              </branches>
            </marked>
            <revision reference="../marked"/>
            <hudsonBuildNumber>1</hudsonBuildNumber>
          </hudson.plugins.git.util.Build>
        </entry>
      </buildsByBranchName>
      <lastBuild reference="../buildsByBranchName/entry/hudson.plugins.git.util.Build"/>
      <remoteUrls>
        <string>https://github.com/project-sunbird/sunbird-devops.git</string>
      </remoteUrls>
    </hudson.plugins.git.util.BuildData>
    <org.jenkinsci.plugins.workflow.steps.scm.MultiSCMRevisionState plugin="workflow-scm-step@400.v6b_89a_1317c9a_">
      <revisionStates>
        <entry>
          <string>git https://github.com/project-sunbird/sunbird-devops.git</string>
          <hudson.scm.SCMRevisionState_-None/>
        </entry>
        <entry>
          <string>git https://github.com/ocisunbird/odev-diksha.git</string>
          <hudson.scm.SCMRevisionState_-None reference="../../entry/hudson.scm.SCMRevisionState_-None"/>
        </entry>
      </revisionStates>
    </org.jenkinsci.plugins.workflow.steps.scm.MultiSCMRevisionState>
    <org.jenkinsci.plugins.workflow.libs.LibrariesAction plugin="pipeline-groovy-lib@612.v84da_9c54906d">
      <libraries>
        <org.jenkinsci.plugins.workflow.libs.LibraryRecord>
          <name>deploy-conf</name>
          <version>heads/shared-lib</version>
          <variables class="sorted-set">
            <string>ansible_playbook_run</string>
            <string>artifact_download</string>
            <string>auto_build_deploy</string>
            <string>auto_build_deploy_player</string>
            <string>copy_file_to_wksp</string>
            <string>deployed_versions</string>
            <string>docker_params</string>
            <string>email_notify</string>
            <string>lp_dp_params</string>
            <string>pre_checks</string>
            <string>slack_notify</string>
            <string>stagingRC</string>
            <string>summary</string>
          </variables>
          <trusted>true</trusted>
          <changelog>true</changelog>
          <directoryName>0246047fbecc35cec6fffc4693ecc0121ab10d67bb38ffe7106715363d0388b7</directoryName>
        </org.jenkinsci.plugins.workflow.libs.LibraryRecord>
      </libraries>
    </org.jenkinsci.plugins.workflow.libs.LibrariesAction>
    <hudson.plugins.git.util.BuildData plugin="git@4.11.5">
      <buildsByBranchName>
        <entry>
          <string>778da7ce7f97efd003eed98071921a837d209343</string>
          <hudson.plugins.git.util.Build>
            <marked plugin="git-client@3.11.2">
              <sha1>778da7ce7f97efd003eed98071921a837d209343</sha1>
              <branches class="singleton-set">
                <hudson.plugins.git.Branch>
                  <sha1 reference="../../../sha1"/>
                  <name>778da7ce7f97efd003eed98071921a837d209343</name>
                </hudson.plugins.git.Branch>
              </branches>
            </marked>
            <revision reference="../marked"/>
            <hudsonBuildNumber>1</hudsonBuildNumber>
          </hudson.plugins.git.util.Build>
        </entry>
      </buildsByBranchName>
      <lastBuild reference="../buildsByBranchName/entry/hudson.plugins.git.util.Build"/>
      <remoteUrls>
        <string>https://github.com/project-sunbird/sunbird-devops.git</string>
      </remoteUrls>
      <index>2</index>
    </hudson.plugins.git.util.BuildData>
    <org.jenkinsci.plugins.workflow.cps.EnvActionImpl plugin="workflow-cps@2660.2664.v4c114e93f4c1">
      <env class="tree-map"/>
    </org.jenkinsci.plugins.workflow.cps.EnvActionImpl>
    <hudson.plugins.ansicolor.action.ColorizedAction plugin="ansicolor@1.0.2">
      <id>e2e219a4-3591-4ead-8306-2a0120e32572</id>
      <colorMapName>xterm</colorMapName>
      <command>START</command>
    </hudson.plugins.ansicolor.action.ColorizedAction>
    <hudson.plugins.ansicolor.action.ColorizedAction plugin="ansicolor@1.0.2">
      <id>a9239a2a-0821-4653-8bbb-1149ca8d5378</id>
      <colorMapName>xterm</colorMapName>
      <command>CURRENT</command>
    </hudson.plugins.ansicolor.action.ColorizedAction>
    <hudson.plugins.copyartifact.CopyArtifact_-EnvAction plugin="copyartifact@1.48"/>
    <hudson.plugins.ansicolor.action.ColorizedAction plugin="ansicolor@1.0.2">
      <id>0117c6e0-d118-41cb-bf54-a7661972bf99</id>
      <colorMapName>xterm</colorMapName>
      <command>STOP</command>
    </hudson.plugins.ansicolor.action.ColorizedAction>
    <hudson.plugins.ansicolor.action.ColorizedAction plugin="ansicolor@1.0.2">
      <id>6ff10d99-e3b0-406b-9d1c-531adb365994</id>
      <colorMapName>xterm</colorMapName>
      <command>START</command>
    </hudson.plugins.ansicolor.action.ColorizedAction>
    <hudson.plugins.ansicolor.action.ColorizedAction plugin="ansicolor@1.0.2">
      <id>6a34d9e6-4071-4cb2-9554-4341aa0725da</id>
      <colorMapName>xterm</colorMapName>
      <command>CURRENT</command>
    </hudson.plugins.ansicolor.action.ColorizedAction>
    <com.cloudbees.plugins.credentials.builds.CredentialsParameterBinder plugin="credentials@1087.1089.v2f1b_9a_b_040e4">
      <boundCredentials class="concurrent-hash-map"/>
    </com.cloudbees.plugins.credentials.builds.CredentialsParameterBinder>
    <hudson.plugins.git.util.BuildData plugin="git@4.11.5">
      <buildsByBranchName>
        <entry>
          <string>origin/odev</string>
          <hudson.plugins.git.util.Build>
            <marked plugin="git-client@3.11.2">
              <sha1>6bac19d185d8ec8aaea4d5db78ff9f30ebfc02f7</sha1>
              <branches class="list">
                <hudson.plugins.git.Branch>
                  <sha1 reference="../../../sha1"/>
                  <name>origin/odev</name>
                </hudson.plugins.git.Branch>
              </branches>
            </marked>
            <revision reference="../marked"/>
            <hudsonBuildNumber>1</hudsonBuildNumber>
          </hudson.plugins.git.util.Build>
        </entry>
      </buildsByBranchName>
      <lastBuild reference="../buildsByBranchName/entry/hudson.plugins.git.util.Build"/>
      <remoteUrls>
        <string>https://github.com/ocisunbird/odev-diksha.git</string>
      </remoteUrls>
      <index>3</index>
    </hudson.plugins.git.util.BuildData>
    <hudson.plugins.ansicolor.action.ColorizedAction plugin="ansicolor@1.0.2">
      <id>3f32105d-b29c-4303-8159-64220d16b1da</id>
      <colorMapName>xterm</colorMapName>
      <command>STOP</command>
    </hudson.plugins.ansicolor.action.ColorizedAction>
    <hudson.plugins.ansicolor.action.ColorizedAction plugin="ansicolor@1.0.2">
      <id>fcc4ebb9-49d9-49de-89f5-caeb7186fe63</id>
      <colorMapName>xterm</colorMapName>
      <command>START</command>
    </hudson.plugins.ansicolor.action.ColorizedAction>
    <hudson.plugins.ansicolor.action.ColorizedAction plugin="ansicolor@1.0.2">
      <id>9ef228bc-00c2-48db-8014-c8ccb8d93873</id>
      <colorMapName>xterm</colorMapName>
      <command>CURRENT</command>
    </hudson.plugins.ansicolor.action.ColorizedAction>
    <hudson.plugins.ansicolor.action.ColorizedAction plugin="ansicolor@1.0.2">
      <id>95ec0a71-7bc9-4a02-8b46-7ced91d07431</id>
      <colorMapName>xterm</colorMapName>
      <command>STOP</command>
    </hudson.plugins.ansicolor.action.ColorizedAction>
    <hudson.plugins.ansicolor.action.ColorizedAction plugin="ansicolor@1.0.2">
      <id>2aab2d00-3b56-40d2-9aaf-1cdbee75aec1</id>
      <colorMapName>xterm</colorMapName>
      <command>START</command>
    </hudson.plugins.ansicolor.action.ColorizedAction>
    <hudson.plugins.ansicolor.action.ColorizedAction plugin="ansicolor@1.0.2">
      <id>be0567b6-6c55-4431-94ca-45211ea9249b</id>
      <colorMapName>xterm</colorMapName>
      <command>CURRENT</command>
    </hudson.plugins.ansicolor.action.ColorizedAction>
    <hudson.plugins.ansicolor.action.ColorizedAction plugin="ansicolor@1.0.2">
      <id>96dbcee2-6973-44ab-8d69-c83e44d6cfd6</id>
      <colorMapName>xterm</colorMapName>
      <command>STOP</command>
    </hudson.plugins.ansicolor.action.ColorizedAction>
    <com.sonyericsson.rebuild.RebuildAction plugin="rebuild@1.34"/>
  </actions>
  <queueId>2606</queueId>
  <timestamp>1679612020342</timestamp>
  <startTime>1679612020349</startTime>
  <result>FAILURE</result>
  <duration>19515</duration>
  <charset>UTF-8</charset>
  <keepLog>false</keepLog>
  <execution class="org.jenkinsci.plugins.workflow.cps.CpsFlowExecution">
    <result>FAILURE</result>
    <script>@Library(&apos;deploy-conf&apos;) _
node(){
    try {
        stage(&apos;checkout public repo&apos;) {
            folder = new File(&quot;$WORKSPACE/.git&quot;)
            if (folder.exists())
            {
               println &quot;Found .git folder. Clearing it..&quot;
               sh&apos;git clean -fxd&apos;
            }
            checkout scm
        }

        stage(&apos;Artifact Upload&apos;) {
            values = docker_params()
            if(params.artifact_source == &quot;ArtifactRepo&quot;) {
                currentWs = sh(returnStdout: true, script: &apos;pwd&apos;).trim()
                ansiblePlaybook = &quot;$currentWs/ansible/docker_image_push.yml&quot;
                ansibleExtraArgs = &quot;--extra-vars \&quot;hub_org=${hub_org} image_name=${values.image_name} image_tag=${values.image_tag}\&quot; --vault-password-file /var/lib/jenkins/secrets/vault-pass&quot;
                values.put(&apos;currentWs&apos;, currentWs)
                values.put(&apos;ansiblePlaybook&apos;, ansiblePlaybook)
                values.put(&apos;ansibleExtraArgs&apos;, ansibleExtraArgs)
                ansible_playbook_run(values)
                currentBuild.result = &apos;SUCCESS&apos;
            }
            archiveArtifacts &apos;metadata.json&apos;
            cdn_file_exists = new File(&quot;$currentWs/index_cdn.ejs&quot;)
            if (cdn_file_exists.exists()) {
                archiveArtifacts &quot;index_cdn.ejs, cdn_assets.zip&quot;
            }    
            currentBuild.description = &quot;Image: ${values.image_tag}, Private: ${params.private_branch}, Public: ${params.branch_or_tag}&quot;
        }
    }

    catch (err) {
        currentBuild.result = &quot;FAILURE&quot;
        throw err
    }
    finally {
        slack_notify(currentBuild.result)
        email_notify()
    }
}
</script>
    <loadedScripts class="map">
      <entry>
        <string>Script1</string>
        <string>DOCKDEV_NOTIFY_SLACK_CHANNEL</string>
      </entry>
      <entry>
        <string>Script2</string>
        <string>DOCKDEV_EMAIL_GROUP</string>
      </entry>
    </loadedScripts>
    <durabilityHint>MAX_SURVIVABILITY</durabilityHint>
    <timings class="map">
      <entry>
        <string>flowNode</string>
        <long>540122627</long>
      </entry>
      <entry>
        <string>classLoad</string>
        <long>3745869552</long>
      </entry>
      <entry>
        <string>run</string>
        <long>3270084346</long>
      </entry>
      <entry>
        <string>parse</string>
        <long>3658336896</long>
      </entry>
      <entry>
        <string>saveProgram</string>
        <long>386219563</long>
      </entry>
    </timings>
    <sandbox>true</sandbox>
    <iota>74</iota>
    <head>1:74</head>
    <done>true</done>
    <resumeBlocked>false</resumeBlocked>
  </execution>
  <completed>true</completed>
  <checkouts class="hudson.util.PersistedList">
    <org.jenkinsci.plugins.workflow.job.WorkflowRun_-SCMCheckout>
      <scm class="hudson.plugins.git.GitSCM" plugin="git@4.11.5">
        <configVersion>2</configVersion>
        <userRemoteConfigs>
          <hudson.plugins.git.UserRemoteConfig>
            <url>https://github.com/project-sunbird/sunbird-devops.git</url>
          </hudson.plugins.git.UserRemoteConfig>
        </userRemoteConfigs>
        <branches>
          <hudson.plugins.git.BranchSpec>
            <name>${public_repo_branch}</name>
          </hudson.plugins.git.BranchSpec>
        </branches>
        <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
        <submoduleCfg class="list"/>
        <extensions>
          <hudson.plugins.git.extensions.impl.CloneOption>
            <shallow>true</shallow>
            <noTags>false</noTags>
            <reference></reference>
            <depth>0</depth>
            <honorRefspec>false</honorRefspec>
          </hudson.plugins.git.extensions.impl.CloneOption>
        </extensions>
      </scm>
      <node></node>
      <workspace>/var/lib/jenkins/workspace/ArtifactUpload/DockDev/Core/Search@script/91792ec314830b4e05d43dc85929fc9a4b132fa2202d87715f6bda5315b40329</workspace>
      <changelogFile>/var/lib/jenkins/jobs/ArtifactUpload/jobs/DockDev/jobs/Core/jobs/Search/builds/1/changelog7043407115833268790.xml</changelogFile>
      <pollingBaseline class="hudson.scm.SCMRevisionState$None" reference="../../../actions/org.jenkinsci.plugins.workflow.steps.scm.MultiSCMRevisionState/revisionStates/entry/hudson.scm.SCMRevisionState_-None"/>
    </org.jenkinsci.plugins.workflow.job.WorkflowRun_-SCMCheckout>
    <org.jenkinsci.plugins.workflow.job.WorkflowRun_-SCMCheckout>
      <scm class="hudson.plugins.git.GitSCM" plugin="git@4.11.5">
        <configVersion>2</configVersion>
        <userRemoteConfigs>
          <hudson.plugins.git.UserRemoteConfig>
            <name>origin</name>
            <refspec>+refs/heads/*:refs/remotes/origin/* refs/heads/shared-lib</refspec>
            <url>https://github.com/project-sunbird/sunbird-devops.git</url>
          </hudson.plugins.git.UserRemoteConfig>
        </userRemoteConfigs>
        <branches class="singleton-list">
          <hudson.plugins.git.BranchSpec>
            <name>778da7ce7f97efd003eed98071921a837d209343</name>
          </hudson.plugins.git.BranchSpec>
        </branches>
        <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
        <submoduleCfg class="empty-list"/>
        <extensions>
          <hudson.plugins.git.extensions.impl.CloneOption>
            <shallow>true</shallow>
            <noTags>true</noTags>
            <depth>1</depth>
            <honorRefspec>false</honorRefspec>
          </hudson.plugins.git.extensions.impl.CloneOption>
          <hudson.plugins.git.extensions.impl.BuildChooserSetting>
            <buildChooser class="jenkins.plugins.git.AbstractGitSCMSource$SpecificRevisionBuildChooser">
              <revision reference="../../../../../../../actions/hudson.plugins.git.util.BuildData[2]/buildsByBranchName/entry/hudson.plugins.git.util.Build/marked"/>
            </buildChooser>
          </hudson.plugins.git.extensions.impl.BuildChooserSetting>
        </extensions>
      </scm>
      <node></node>
      <workspace>/var/lib/jenkins/workspace/ArtifactUpload/DockDev/Core/Search@libs/4e97b83e3fc5b39f9821d141786befe5af9f202ab969e808576bfd142e651f32</workspace>
      <changelogFile>/var/lib/jenkins/jobs/ArtifactUpload/jobs/DockDev/jobs/Core/jobs/Search/builds/1/changelog332776746022511260.xml</changelogFile>
      <pollingBaseline class="hudson.scm.SCMRevisionState$None" reference="../../../actions/org.jenkinsci.plugins.workflow.steps.scm.MultiSCMRevisionState/revisionStates/entry/hudson.scm.SCMRevisionState_-None"/>
    </org.jenkinsci.plugins.workflow.job.WorkflowRun_-SCMCheckout>
    <org.jenkinsci.plugins.workflow.job.WorkflowRun_-SCMCheckout>
      <scm class="hudson.plugins.git.GitSCM" reference="../../org.jenkinsci.plugins.workflow.job.WorkflowRun_-SCMCheckout/scm"/>
      <node></node>
      <workspace>/var/lib/jenkins/workspace/ArtifactUpload/DockDev/Core/Search</workspace>
      <pollingBaseline class="hudson.scm.SCMRevisionState$None" reference="../../../actions/org.jenkinsci.plugins.workflow.steps.scm.MultiSCMRevisionState/revisionStates/entry/hudson.scm.SCMRevisionState_-None"/>
    </org.jenkinsci.plugins.workflow.job.WorkflowRun_-SCMCheckout>
    <org.jenkinsci.plugins.workflow.job.WorkflowRun_-SCMCheckout>
      <scm class="hudson.plugins.git.GitSCM" plugin="git@4.11.5">
        <configVersion>2</configVersion>
        <userRemoteConfigs>
          <hudson.plugins.git.UserRemoteConfig>
            <url>https://github.com/ocisunbird/odev-diksha.git</url>
            <credentialsId>github-cred</credentialsId>
          </hudson.plugins.git.UserRemoteConfig>
        </userRemoteConfigs>
        <branches>
          <hudson.plugins.git.BranchSpec>
            <name>odev</name>
          </hudson.plugins.git.BranchSpec>
        </branches>
        <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
        <submoduleCfg class="empty-list"/>
        <extensions>
          <hudson.plugins.git.extensions.impl.CloneOption>
            <shallow>true</shallow>
            <noTags>true</noTags>
            <reference></reference>
            <depth>1</depth>
            <honorRefspec>false</honorRefspec>
          </hudson.plugins.git.extensions.impl.CloneOption>
        </extensions>
      </scm>
      <node></node>
      <workspace>/var/lib/jenkins/workspace/ArtifactUpload/DockDev/Core/Search/private</workspace>
      <changelogFile>/var/lib/jenkins/jobs/ArtifactUpload/jobs/DockDev/jobs/Core/jobs/Search/builds/1/changelog4015238778554715275.xml</changelogFile>
      <pollingBaseline class="hudson.scm.SCMRevisionState$None" reference="../../../actions/org.jenkinsci.plugins.workflow.steps.scm.MultiSCMRevisionState/revisionStates/entry/hudson.scm.SCMRevisionState_-None"/>
    </org.jenkinsci.plugins.workflow.job.WorkflowRun_-SCMCheckout>
  </checkouts>
</flow-build>