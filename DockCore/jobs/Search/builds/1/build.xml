<?xml version='1.1' encoding='UTF-8'?>
<flow-build plugin="workflow-job@1145.v7f2433caa07f">
  <actions>
    <hudson.model.CauseAction>
      <causeBag class="linked-hash-map">
        <entry>
          <hudson.triggers.SCMTrigger_-SCMTriggerCause/>
          <int>1</int>
        </entry>
      </causeBag>
    </hudson.model.CauseAction>
    <hudson.triggers.SCMTrigger_-BuildAction/>
    <hudson.model.ParametersAction>
      <safeParameters class="sorted-set"/>
      <parameters>
        <hudson.model.StringParameterValue>
          <name>github_release_tag</name>
          <description>&lt;font style=&quot;color:dimgray;font-size:14px;&quot;&gt;&lt;b&gt;
&lt;li&gt;To build from a tag, use refs/tags/github_tag&lt;/li&gt;
&lt;li&gt;To build from a branch, use refs/heads/github_branch&lt;/li&gt;
&lt;li&gt;Usually this input does not require any changes, unless you want to build from a differnt branch / tag&lt;/li&gt;
&lt;li&gt;The default value of ${public_repo_branch} will be the release / tag version set in global configuration&lt;/li&gt;
&lt;li&gt;To build from a differnt branch, replace the ${public_repo_branch} with your branch&lt;/li&gt;
&lt;/b&gt;&lt;/font&gt;</description>
          <value>refs/heads/${public_repo_branch}</value>
        </hudson.model.StringParameterValue>
      </parameters>
      <parameterDefinitionNames>
        <string>github_release_tag</string>
      </parameterDefinitionNames>
    </hudson.model.ParametersAction>
    <hudson.plugins.git.util.BuildData plugin="git@4.11.5">
      <buildsByBranchName>
        <entry>
          <string>refs/remotes/origin/release-5.1.0</string>
          <hudson.plugins.git.util.Build>
            <marked plugin="git-client@3.11.2">
              <sha1>760d7baf9e49e48805058356ae67b7fae8b58d66</sha1>
              <branches class="list">
                <hudson.plugins.git.Branch>
                  <sha1 reference="../../../sha1"/>
                  <name>refs/remotes/origin/release-5.1.0</name>
                </hudson.plugins.git.Branch>
              </branches>
            </marked>
            <revision reference="../marked"/>
            <hudsonBuildNumber>1</hudsonBuildNumber>
          </hudson.plugins.git.util.Build>
        </entry>
      </buildsByBranchName>
      <lastBuild reference="../buildsByBranchName/entry/hudson.plugins.git.util.Build"/>
      <remoteUrls>
        <string>https://github.com/project-sunbird/knowledge-platform.git</string>
      </remoteUrls>
    </hudson.plugins.git.util.BuildData>
    <org.jenkinsci.plugins.workflow.steps.scm.MultiSCMRevisionState plugin="workflow-scm-step@400.v6b_89a_1317c9a_">
      <revisionStates>
        <entry>
          <string>git https://github.com/project-sunbird/knowledge-platform.git</string>
          <hudson.scm.SCMRevisionState_-None/>
        </entry>
      </revisionStates>
    </org.jenkinsci.plugins.workflow.steps.scm.MultiSCMRevisionState>
    <org.jenkinsci.plugins.workflow.libs.LibrariesAction plugin="pipeline-groovy-lib@612.v84da_9c54906d">
      <libraries/>
    </org.jenkinsci.plugins.workflow.libs.LibrariesAction>
    <hudson.plugins.ansicolor.action.ColorizedAction plugin="ansicolor@1.0.2">
      <id>07cda2e0-9c67-45b2-a1f4-e130c65daf1c</id>
      <colorMapName>xterm</colorMapName>
      <command>START</command>
    </hudson.plugins.ansicolor.action.ColorizedAction>
    <hudson.plugins.ansicolor.action.ColorizedAction plugin="ansicolor@1.0.2">
      <id>7a5886ad-36e2-421e-be7d-b5b7f569650b</id>
      <colorMapName>xterm</colorMapName>
      <command>CURRENT</command>
    </hudson.plugins.ansicolor.action.ColorizedAction>
    <org.jenkinsci.plugins.workflow.cps.EnvActionImpl plugin="workflow-cps@2660.2664.v4c114e93f4c1">
      <env class="tree-map">
        <entry>
          <string>NODE_ENV</string>
          <string>build</string>
        </entry>
      </env>
    </org.jenkinsci.plugins.workflow.cps.EnvActionImpl>
    <hudson.plugins.ansicolor.action.ColorizedAction plugin="ansicolor@1.0.2">
      <id>caad9e33-2573-4cc3-9c3f-e3677c2b8654</id>
      <colorMapName>xterm</colorMapName>
      <command>STOP</command>
    </hudson.plugins.ansicolor.action.ColorizedAction>
    <com.sonyericsson.rebuild.RebuildAction plugin="rebuild@1.34"/>
    <hudson.plugins.ansicolor.action.ColorizedAction plugin="ansicolor@1.0.2">
      <id>K0ceqsWATOYqBw/M7t+yAZiWgb1rHuTKpXx3WYJCCaA=</id>
      <colorMapName>xterm</colorMapName>
      <command>START</command>
    </hudson.plugins.ansicolor.action.ColorizedAction>
  </actions>
  <queueId>2601</queueId>
  <timestamp>1679611510313</timestamp>
  <startTime>1679611510320</startTime>
  <result>SUCCESS</result>
  <description>release-5.1.0_760d7baf_1</description>
  <duration>501649</duration>
  <charset>UTF-8</charset>
  <keepLog>false</keepLog>
  <execution class="org.jenkinsci.plugins.workflow.cps.CpsFlowExecution">
    <result>SUCCESS</result>
    <script>node(&apos;build-slave&apos;) {
    try {
        String ANSI_GREEN = &quot;\u001B[32m&quot;
        String ANSI_NORMAL = &quot;\u001B[0m&quot;
        String ANSI_BOLD = &quot;\u001B[1m&quot;
        String ANSI_RED = &quot;\u001B[31m&quot;
        String ANSI_YELLOW = &quot;\u001B[33m&quot;

        ansiColor(&apos;xterm&apos;) {
            withEnv([&quot;JAVA_HOME=${JAVA11_HOME}&quot;]) {
                stage(&apos;Checkout&apos;) {
                    if (!env.hub_org) {
                        println(ANSI_BOLD + ANSI_RED + &quot;Uh Oh! Please set a Jenkins environment variable named hub_org with value as registery/sunbidrded&quot; + ANSI_NORMAL)
                        error &apos;Please resolve the errors and rerun..&apos;
                    } else
                        println(ANSI_BOLD + ANSI_GREEN + &quot;Found environment variable named hub_org with value as: &quot; + hub_org + ANSI_NORMAL)
                }
                
                cleanWs()
                checkout scm
                commit_hash = sh(script: &apos;git rev-parse --short HEAD&apos;, returnStdout: true).trim()
                build_tag = sh(script: &quot;echo &quot; + params.github_release_tag.split(&apos;/&apos;)[-1] + &quot;_&quot; + commit_hash + &quot;_&quot; + env.BUILD_NUMBER, returnStdout: true).trim()
                echo &quot;build_tag: &quot; + build_tag

                stage(&apos;Build&apos;) {
                    env.NODE_ENV = &quot;build&quot;
                    print &quot;Environment will be : ${env.NODE_ENV}&quot;
                    sh &apos;mvn clean install -DskipTests=true &apos;

                }

                stage(&apos;Package&apos;) {
                    dir(&apos;search-api&apos;) {
                        sh &apos;mvn play2:dist -pl search-service&apos;
                    }
                    sh(&apos;chmod 777 build/build.sh&apos;)
                    sh(&quot;build/build.sh ${build_tag} ${&quot;search-service&quot;} ${env.NODE_NAME} ${hub_org}&quot;)
                }
                stage(&apos;ArchiveArtifacts&apos;) {
                    archiveArtifacts &quot;metadata.json&quot;
                    currentBuild.description = &quot;${build_tag}&quot;
                }
            }
        }
    }
    catch (err) {
        currentBuild.result = &quot;FAILURE&quot;
        throw err
    }
}
</script>
    <loadedScripts class="map"/>
    <durabilityHint>MAX_SURVIVABILITY</durabilityHint>
    <timings class="map">
      <entry>
        <string>flowNode</string>
        <long>424328740</long>
      </entry>
      <entry>
        <string>classLoad</string>
        <long>2157480575</long>
      </entry>
      <entry>
        <string>run</string>
        <long>2839018209</long>
      </entry>
      <entry>
        <string>parse</string>
        <long>1318072130</long>
      </entry>
      <entry>
        <string>saveProgram</string>
        <long>1537568516</long>
      </entry>
    </timings>
    <sandbox>true</sandbox>
    <iota>47</iota>
    <head>1:47</head>
    <done>true</done>
    <resumeBlocked>false</resumeBlocked>
  </execution>
  <completed>true</completed>
  <checkouts class="hudson.util.PersistedList">
    <org.jenkinsci.plugins.workflow.job.WorkflowRun_-SCMCheckout>
      <scm class="hudson.plugins.git.GitSCM" plugin="git@4.11.5">
        <configVersion>2</configVersion>
        <userRemoteConfigs>
          <hudson.plugins.git.UserRemoteConfig>
            <url>https://github.com/project-sunbird/knowledge-platform.git</url>
          </hudson.plugins.git.UserRemoteConfig>
        </userRemoteConfigs>
        <branches>
          <hudson.plugins.git.BranchSpec>
            <name>${github_release_tag}</name>
          </hudson.plugins.git.BranchSpec>
        </branches>
        <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
        <extensions/>
      </scm>
      <node></node>
      <workspace>/var/lib/jenkins/workspace/Build/DockCore/Search@script/edaffad5640d48dcc2d31b4cfa1d5b8ed7e876a4cceef35aeab1c0c26b66b2f2</workspace>
      <changelogFile>/var/lib/jenkins/jobs/Build/jobs/DockCore/jobs/Search/builds/1/changelog3328674245022811948.xml</changelogFile>
      <pollingBaseline class="hudson.scm.SCMRevisionState$None" reference="../../../actions/org.jenkinsci.plugins.workflow.steps.scm.MultiSCMRevisionState/revisionStates/entry/hudson.scm.SCMRevisionState_-None"/>
    </org.jenkinsci.plugins.workflow.job.WorkflowRun_-SCMCheckout>
    <org.jenkinsci.plugins.workflow.job.WorkflowRun_-SCMCheckout>
      <scm class="hudson.plugins.git.GitSCM" reference="../../org.jenkinsci.plugins.workflow.job.WorkflowRun_-SCMCheckout/scm"/>
      <node></node>
      <workspace>/var/lib/jenkins/workspace/Build/DockCore/Search</workspace>
      <pollingBaseline class="hudson.scm.SCMRevisionState$None" reference="../../../actions/org.jenkinsci.plugins.workflow.steps.scm.MultiSCMRevisionState/revisionStates/entry/hudson.scm.SCMRevisionState_-None"/>
    </org.jenkinsci.plugins.workflow.job.WorkflowRun_-SCMCheckout>
  </checkouts>
</flow-build>